done 0. build language (again)

done 2. make info table for command codes 
done 1. make каркас of the programm 

	done - check header of file in ctor
	done - insert valid check in functions
	done - try to execute 

done 4. listing 

done 5. resize of entities
done 6. init and final entities 
done 6,5. integrate list !!!
done 6,6. make dump 
done 6,7. make switch with defines

done 6,8. cur call_buf_position
done 7. make plan of translating 
done 7,5. make code generating for translating instructions
done 7,9. make загатовочки for translating arithm as codegenerating

done 7,94. Renew code_info
done 7,945. renew заголовочки
done 7,946. fill registers with zero's
done 7,947. add name of entity in list_dump 
done 7,95. make stdlib for various functions  
done 7,958. make  заголовочки для вызовов функций 
done 7,959. reduce amount of code 
done 7,9595. make enum fro std func and patching functions for each case
done 7,96. deal with constant and addresses 
none 7,965. remove patching, make everything сразу
done 7,9655. error in instructions;
done 7,966. test everything
done 8. make загатовочки for translating JUMPS as codegenerating 

done 8,5. deal with conditional jumps
done 8,6. change fix up of jumps 

done 8,8. test which functions need alignment
done 8,9. (alignment before call) errors with out in CALL: MAIN (WTF ?? i dk how to fix this shit)

9. remove redudant push/pops of registers ( during calls)

done 8,5. make near calls and jumps

8,7. replace spushing and poping xmm0-7 xmm1-7 with movs to registers
done 8,8. remove count call buf size
done 8,9. change types in patchig segment ( int64_t, uint64_t etc )

done 9. unite some functions of translating 
done 9,5. make codegenerating for standard functions

done 9,6. part of array for const values is unused, change it

done 9,7. deal with file i/o
done 9,8. deal with seg faults with io

done 10. improve validator
done 11. change list for optimizer
none 11,5.listing optimizer'a
done 12. optimizer
done 12,1 test optimizer
done 12,5. optimize code in optimizer
done 13. cmndline arguments
none 14. change trans_struct input (from list directly)

none done 993. check what instructions are faster ( push/ pop xmm(i) using R(i)X)
done 994. table with current values of registers
none 995. list visiter
none 996. list search ( gets function for comparing)
997. fast cpy sse
done 998. add types for entities for optimizations 
	 of last step
none 999. add saving feature 

IDEAS:

	---------------------------------------------
	1. первый раз проходим и собираем все адреса куда направлены джампы

	2. во время трансляции проверяем, не находимся ли мы сейчас там, куда направлен джамп

	3. если это так, то запоминаем cur_call_buf_pos

	4. дальше хз

	---------------------------------------------
	после отработки функции  создания новой entity 
	вызывать проверку и в случае чего ресайз

	---------------------------------------------
	in trans_structure make struct with 'ram' array, 
	also make another one similar for constant values.

	remember places with constant values, then patch them

	---------------------------------------------
	use near jumps if its unknown what destination of jump is

	---------------------------------------------
	patch type + union : entity* and cur_call_buf_pos

	---------------------------------------------
	пройтись, отследить расположение джампов, запомнить,
	в момент когда встретишь сохранять - номер откуда куда

	---------------------------------------------
	при втором проходе фиксировать момент когда встречаем dest jumpa
	отдельный проход 
	cв конце еще один проход для патчинга


